[comment encoding = UTF-8 /]
[module extrafileGenerate('http://it.univa.disim.micro')]


[template public generateElement(aMicroserviceArchitecture : MicroserviceArchitecture)]
[comment @main/]
[file (aMicroserviceArchitecture.name+'-extra.txt', false, 'UTF-8')]
Jenkins Blueocean
docker run -u root -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 -p 2375:2375 --name jenkins_blueocean jenkinsci/blueocean:latest

mvn clean package docker:build

[for (s : Service | aMicroserviceArchitecture.services)]
mvn -f [s.name/]/pom.xml docker:build
[/for]

docker-compose up

docker network create my-net

docker run -d \
    --name mongodb \
    --network=my-net \
    -p 27017:27017 \
    -e MONGO_DATA_DIR=/data/db \
    -e MONGO_LOG_DIR=/dev/null \
    -v /data/db:/data/db \
    mongo:3.0.15

docker run -d \
    --name mysql \
    --network=my-net \
    -p 3306:3306 \
    -e MYSQL_ROOT_PASSWORD=rootpassword \
    -e MYSQL_USER=mysqluser \
    -e MYSQL_PASSWORD=mysqlpw \
    eventuateio/eventuate-tram-sagas-mysql:0.3.0.RELEASE

docker run -d \
    --name zookeeper \
    --network=my-net \
    -p 2181:2181 \
    -p 2888:2888 \
    -p 3888:3888 \
    eventuateio/eventuateio-local-zookeeper:0.14.0

docker run -d \
	--name kafka \
        --network=my-net \
	-p 9092:9092 \
	--link zookeeper \
	-e ADVERTISED_HOST_NAME=${DOCKER_HOST_IP} \
	-e "KAFKA_HEAP_OPTS=-Xmx320m -Xms320m" \
	-e ZOOKEEPER_SERVERS=zookeeper:2181 \
	eventuateio/eventuateio-local-kafka:0.14.0

docker run -d \
	--name cdcservice \
        --network=my-net \
	-p 8099:8080 \
	--link mysql \
	--link kafka \
	--link zookeeper \
	-e SPRING_DATASOURCE_URL=jdbc:mysql://mysql/eventuate \
	-e SPRING_DATASOURCE_USERNAME=mysqluser \
	-e SPRING_DATASOURCE_PASSWORD=mysqlpw \
	-e SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.jdbc.Driver \
	-e EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
	-e EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING=zookeeper:2181 \
	-e EVENTUATELOCAL_CDC_DB_USER_NAME=root \
	-e EVENTUATELOCAL_CDC_DB_PASSWORD=rootpassword \
	-e EVENTUATELOCAL_CDC_BINLOG_CLIENT_ID=1234567890 \
	eventuateio/eventuate-tram-cdc-mysql-service:0.3.0.RELEASE

[for (s : Service | aMicroserviceArchitecture.services)]
docker run -d \
	--name [s.name/] \
        --network=my-net \
	-p [s.port/]:8080 \
	--link mysql \
	--link kafka \
	--link zookeeper \
        --link cdcservice \
        -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql/eventuate \
	-e SPRING_DATASOURCE_USERNAME=mysqluser \
	-e SPRING_DATASOURCE_PASSWORD=mysqlpw \
	-e SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.jdbc.Driver \
        -e SPRING_DATASOURCE_TIMEOUT=10000 \
	-e EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS=kafka:9092 \
	-e EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING=zookeeper:2181 \
	-e MONGODB=mongodb:27017/[s.fullname.toLower()/]db \
	[aMicroserviceArchitecture.name.toLower()/]/[s.name/]

[/for]
[/file]
[file ('README.md', false, 'UTF-8')]
# MDEForge Application
### Installation

	### Prerequisites
		- Java 8
		- Maven 
		- Docker
		
- Configure DOCKER_HOST_IP variable ['['/]see[']'/](http://eventuate.io/docs/usingdocker.html).
- Eventuate Diagnostic ['['/]see[']'/](https://github.com/eventuate-local-docker-images/eventuateio-docker-networking-diagnostics).
- Install Jenkins BlueOcean (Optional)
	- docker run -u root -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 -p 2375:2375 --name jenkins_blueocean jenkinsci/blueocean:latest

### Building and Running (2 ways)

- Jenkins Pipelines
	- Run Enviroment - ['['/]pipeline[']'/](https://github.com/carloselpapa10/MDEForge/blob/master/JenkinsfileRunEnv)
	- Run Services - ['['/]pipeline[']'/](https://github.com/carloselpapa10/MDEForge/blob/master/JenkinsfileRunServ)
- Docker Compose
```sh
$ mvn clean package -s settings.xml docker:build
```
```sh
$ docker-compose up
```

### Swagger UI
[for (s : Service | aMicroserviceArchitecture.services)]
- [s.shortname/] Service
```sh
http://localhost:[s.port/]/swagger-ui.html
```
[/for]
[/file]
[/template]
