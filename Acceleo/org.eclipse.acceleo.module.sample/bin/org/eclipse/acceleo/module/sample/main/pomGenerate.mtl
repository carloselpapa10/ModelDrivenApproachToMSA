[comment encoding = UTF-8 /]
[module pomGenerate('http://it.univa.disim.micro')]


[template public generateElement(aMicroserviceArchitecture : MicroserviceArchitecture)]
[comment @main/]
[for (s : Service | aMicroserviceArchitecture.services)]

[comment POM.xml/]
	[file (s.name+'/pom.xml', false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.[aMicroserviceArchitecture.name.toLower()/]</groupId>
	<artifactId>[s.name /]</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>[s.name /]</name>
	<description>[s.oclAsType(micro::Service).description/]</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		
		<start-class>org.[aMicroserviceArchitecture.name.toLower()/].[s.fullname.toLower() /].[s.fullname /]Application</start-class>
		<docker.image.prefix>[aMicroserviceArchitecture.name.toLower() /]</docker.image.prefix>
		<docker.baseDir>src/main/docker</docker.baseDir>
	</properties>
	
	<repositories>
        <repository>
            <id>jcenter</id>
            <url>http://jcenter.bintray.com</url>
        </repository>
	</repositories>

	<dependencies>
	
		<dependency>
			<groupId>org.[aMicroserviceArchitecture.name.toLower()/]</groupId>
			<artifactId>service-model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>[s.name /]</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>2.16</version>
			    <configuration>
			        <reuseForks>false</reuseForks>
			        <forkCount>1</forkCount>
			    </configuration>
			</plugin>
			
			<plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>0.4.13</version>
	            <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
				</configuration>
	        </plugin>
		</plugins>
	</build>

</project>
	
	[/file]

[/for]

[/template]
