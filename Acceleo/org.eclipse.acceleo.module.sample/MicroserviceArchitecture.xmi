<?xml version="1.0" encoding="UTF-8"?>
<micro:MicroserviceArchitecture
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:micro="http://it.univa.disim.micro"
    name="OrderSample">
  <services
      xsi:type="micro:AggregateService"
      name="customer-service"
      fullname="CustomerService"
      description="Customer Service Description"
      shortname="Customer"
      port="5000"
      models="//@models.0">
    <modelEvents
        name="customerModelEvent"
        model="//@models.0"/>
    <operation
        name="createCustomer"
        publish="//@services.0/@api/@events.0"
        model="//@models.0"
        isMethodController="true"/>
    <operation
        name="findCustomer"
        operationType="retrieve"
        model="//@models.0"
        isMethodController="true"/>
    <operation
        name="updateCustomer"
        operationType="update"
        publish="//@services.0/@api/@events.2"
        model="//@models.0"
        isMethodController="true"/>
    <operation
        name="deleteCustomer"
        operationType="delete"
        publish="//@services.0/@api/@events.1"
        model="//@models.0"
        isMethodController="true"/>
    <api name="api">
      <events
          name="CustomerCreatedEvent"/>
      <events
          name="CustomerDeletedEvent"/>
      <events
          name="CustomerUpdatedEvent"/>
      <commands
          name="ValidateCustomerByOrderService"
          commandType="invoke"/>
      <infos
          name="Customer"
          dto="//@models.0"/>
    </api>
  </services>
  <services
      xsi:type="micro:AggregateService"
      name="invoice-service"
      fullname="InvoiceService"
      description="Invoice Service Description"
      shortname="Invoice"
      port="5001"
      models="//@models.1">
    <modelEvents
        name="invoiceModelEvent"
        model="//@models.1"/>
    <operation
        name="createInvoice"
        publish="//@services.1/@api/@events.0"
        model="//@models.1"/>
    <operation
        name="rejectInvoice"
        operationType="delete"
        publish="//@services.1/@api/@events.1"
        model="//@models.1"/>
    <operation
        name="findInvoice"
        operationType="retrieve"
        model="//@models.1"
        isMethodController="true"/>
    <api name="api">
      <events
          name="InvoiceCreatedEvent"/>
      <events
          name="InvoiceCreationFailedEvent"/>
      <commands
          name="RequestInvoiceCommand"
          commandType="reply"
          replyInfo="//@services.1/@api/@infos.0"/>
      <commands
          name="CompensateInvoiceCommand"/>
      <commands
          name="ValidateInvoiceByOrderService"
          commandType="invoke"/>
      <infos
          name="Invoice"
          dto="//@models.1"/>
    </api>
  </services>
  <services
      xsi:type="micro:AggregateService"
      name="order-service"
      fullname="OrderService"
      description="Order Service Description"
      shortname="Order"
      port="5002"
      models="//@models.2">
    <modelEvents
        name="orderModelEvent"
        model="//@models.2"/>
    <operation
        name="createOrder"
        publish="//@services.2/@api/@events.1"
        model="//@models.2"
        isMethodController="true">
      <Saga
          name="CreateOrder">
        <Steps
            name="compensateOrder"
            commands="//@services.2/@api/@commands.1"/>
        <Steps
            name="validateCustomer"
            commands="//@services.0/@api/@commands.0"/>
        <Steps
            name="requestInvoice"
            commands="//@services.1/@api/@commands.0 //@services.1/@api/@commands.1"/>
        <Steps
            name="completeOrder"
            commands="//@services.2/@api/@commands.0"/>
        <Data
            name="CreateOrder"/>
      </Saga>
    </operation>
    <operation
        name="findOrder"
        operationType="retrieve"
        model="//@models.2"
        isMethodController="true"/>
    <operation
        name="updateOrder"
        operationType="update"
        model="//@models.2"
        isMethodController="true">
      <Saga
          name="UpdateOrder">
        <Steps
            name="validateCustomer"
            commands="//@services.0/@api/@commands.0"/>
        <Steps
            name="validateInvoice"
            commands="//@services.1/@api/@commands.2"/>
        <Steps
            name="editOrder"
            commands="//@services.2/@api/@commands.2"/>
        <Data
            name="UpdateOrder"/>
      </Saga>
    </operation>
    <operation
        name="rejectOrder"
        operationType="delete"
        publish="//@services.2/@api/@events.2"
        model="//@models.2"/>
    <operation
        name="completeOrder"
        operationType="update"
        publish="//@services.2/@api/@events.0"
        model="//@models.2"/>
    <operation
        name="editOrder"
        operationType="update"
        publish="//@services.2/@api/@events.3"
        model="//@models.2"/>
    <operation
        name="deleteOrder"
        operationType="delete"
        publish="//@services.2/@api/@events.4"
        model="//@models.2"
        isMethodController="true"/>
    <operation
        name="updateInvoiceOrder"
        operationType="update"
        publish="//@services.2/@api/@events.5"
        model="//@models.2"/>
    <api name="api">
      <events
          name="OrderCompletedEvent"/>
      <events
          name="OrderCreatedEvent"/>
      <events
          name="OrderRejectedEvent"/>
      <events
          name="OrderEditedEvent"/>
      <events
          name="OrderDeletedEvent"/>
      <events
          name="OrderUpdatedInvoiceEvent"/>
      <commands
          name="CompleteOrderCommand"
          commandType="invoke"/>
      <commands
          name="RejectOrderCommand"/>
      <commands
          name="EditOrderCommand"
          commandType="invoke"/>
      <infos
          name="Order"
          dto="//@models.2"/>
    </api>
  </services>
  <services
      xsi:type="micro:ViewService"
      name="orderview-service"
      fullname="OrderViewService"
      description="Order View Service Description"
      shortname="OrderView"
      port="5003"
      replicateServices="//@services.1 //@services.0 //@services.2"/>
  <models name="Customer">
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="Id"
        isId="true"/>
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="Name"/>
  </models>
  <models name="Invoice">
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="Id"
        isId="true"
        isGenerated="true"/>
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="OrderId"/>
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="InvoiceComment"/>
  </models>
  <models name="Order">
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="Id"
        isId="true"
        isGenerated="true"/>
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="Description"/>
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="CustomerId"
        ModelToView="//@models.0"/>
    <attributes
        xsi:type="micro:PrimitiveTypeAttribute"
        name="InvoiceId"
        ModelToView="//@models.1"/>
  </models>
</micro:MicroserviceArchitecture>
